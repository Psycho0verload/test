name: Semantic Version Testmatrix

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version eingeben zum Testen (z.â€¯B. 1.0.0 oder 1.0.0-rc)'
        required: true
        type: string

jobs:
  matrix-test:
    name: Test ${{ matrix.type }} -> Version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type:
          - major
          - minor
          - patch
          - feature
          - bug
          - hotfix
          - stable
          - alpha
          - beta
          - pre
          - rc
          - patch-alpha
          - patch-beta
          - patch-pre
          - patch-rc
          - minor-alpha
          - minor-beta
          - minor-pre
          - minor-rc
          - major-alpha
          - major-beta
          - major-pre
          - major-rc

    steps:
      - name: Run version bump with ${{ matrix.type }}
        id: bump
        uses: psycho0verload/increment-semantic-version@master
        with:
          current-version: ${{ inputs.version }}
          version-fragment: ${{ matrix.type }}

      - name: Print result
        run: |
          echo "Input version: ${{ inputs.version }}"
          echo "Type: ${{ matrix.type }}"
          echo "Result: ${{ steps.bump.outputs.next-version }}"

      - name: Save result to file
        run: |
          mkdir -p result
          echo "${{ inputs.version }} â†’ ${{ matrix.type }} â†’ ${{ steps.bump.outputs.next-version }}" > result/result.txt

      - name: Upload result artifact
        uses: actions/upload-artifact@v4
        with:
          name: matrix-result-${{ matrix.type }}
          path: result/result.txt

  summary:
    name: Zusammenfassung aller Versionstests
    runs-on: ubuntu-latest
    needs: matrix-test
    if: always()
    steps:
      - name: Download all result artifacts
        uses: actions/download-artifact@v4
        with:
          path: results

      - name: Print Zusammenfassung in Logs
        run: |
          echo "### ðŸ§ª Zusammenfassung aller Versionstests:"
          echo ""
          find results -name 'result.txt' -exec cat {} \; | sort

      - name: Schreibe Zusammenfassung in GitHub Summary
        run: |
          echo "### ðŸ§ª Zusammenfassung aller Versionstests:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          find results -name 'result.txt' -exec cat {} \; | sort >> $GITHUB_STEP_SUMMARY